type StreamingStrategy = variant {
                           Callback:
                            record {
                              callback:
                               func (StreamCallbackToken) ->
                                (StreamCallbackHttpResponse) query;
                              token: StreamCallbackToken;
                            };};
type StreamCallbackToken = 
 record {
   content_encoding: text;
   index: nat;
   key: Key;
   sha256: opt vec nat8;
 };
type StreamCallbackHttpResponse = 
 record {
   body: vec nat8;
   token: opt StreamCallbackToken;
 };
type Key = text;
type HttpResponse = 
 record {
   body: blob;
   headers: vec HeaderField;
   status_code: nat16;
   streaming_strategy: opt StreamingStrategy;
 };
type HttpRequest = 
 record {
   body: vec nat8;
   headers: vec HeaderField;
   method: text;
   url: text;
 };
type HeaderField = 
 record {
   text;
   text;
 };
service : {
  get: () -> (nat) query;
  http_request: (HttpRequest) -> (HttpResponse) query;
  increment: () -> ();
  set: (nat) -> ();
}
